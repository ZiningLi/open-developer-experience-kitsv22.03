# SPDX-License-Identifier: Apache-2.0
# Copyright (c) 2021 Intel Corporation

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "prometheus-statsd-exporter.fullname" . }}
  labels:
    {{- include "prometheus-statsd-exporter.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "prometheus-statsd-exporter.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "prometheus-statsd-exporter.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "prometheus-statsd-exporter.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: {{ .Values.proxy.name }}
        image: {{ .Values.proxy.image }}
        volumeMounts:
        - name: proxy-config
          mountPath: {{ .Values.proxy.pathToNginxCfg }}
          subPath: nginx.conf
        - name: certs
          mountPath: {{ .Values.proxy.certsDest }}
        ports:
        - containerPort: {{ .Values.proxy.metricsStatsdPort }}
      - name: {{ .Chart.Name }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args:
          - --web.listen-address=:{{ .Values.proxy.internalStatsdPort }}
          - --web.telemetry-path={{ .Values.service.path }}
          {{- if .Values.statsd.udpPort }}
          - --statsd.listen-udp=:{{ .Values.statsd.udpPort }}
          {{- else }}
          - --statsd.listen-udp=
          {{- end }}
          {{- if .Values.statsd.tcpPort }}
          - --statsd.listen-tcp=:{{ .Values.statsd.tcpPort }}
          {{- else }}
          - --statsd.listen-tcp=
          {{- end }}
          - --statsd.cache-size={{ .Values.statsd.cacheSize }}
          - --statsd.event-queue-size={{ .Values.statsd.eventQueueSize }}
          - --statsd.event-flush-threshold={{ .Values.statsd.eventFlushThreshold }}
          - --statsd.event-flush-interval={{ .Values.statsd.eventFlushInterval }}
          {{- if .Values.statsd.mappingConfig }}
          - --statsd.mapping-config=/etc/prometheus-statsd-exporter/statsd-mapping.conf
          {{- end }}
        ports:
          - name: https
            containerPort: {{ .Values.proxy.internalStatsdPort }}
            protocol: TCP
          {{- if .Values.statsd.tcpPort }}
          - name: statsd-tcp
            containerPort: {{ .Values.statsd.tcpPort }}
            protocol: TCP
          {{- end }}
          {{- if .Values.statsd.udpPort }}
          - name: statsd-udp
            containerPort: {{ .Values.statsd.udpPort }}
            protocol: UDP
          {{- end }}
        livenessProbe:
          httpGet:
            path: /metrics
            port: https
        readinessProbe:
          httpGet:
            path: /metrics
            port: https
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        {{- if or .Values.statsd.mappingConfigMapName .Values.statsd.mappingConfig }}
        volumeMounts:
          - name: statsd-mapping-config
            mountPath: /etc/prometheus-statsd-exporter
        {{- end }}
      volumes:
      {{- if or .Values.statsd.mappingConfigMapName .Values.statsd.mappingConfig }}
      - name: statsd-mapping-config
        configMap:
          name: {{ template "prometheus-statsd-exporter.configMapName" . }}
          items:
            - key: statsd.mappingConf
              path: statsd-mapping.conf
      {{- end }}
      - name: proxy-config
        configMap:
          name: {{ .Values.proxy.configMap }}
      - name: certs
        projected:
          sources:
          - secret:
              name: root-ca
          - secret:
              name: {{ .Values.proxy.secretName }}
